name: EC2 Instance Validation

on:
  workflow_dispatch:

env:
  REGION: "us-east-1"  
  DEV_ROLE_ARN: "arn:aws:iam::992382823608:role/github-assumerole"
  INSTANCE_ID: ""
  S3_BUCKET_NAME: "test-j3"  # Replace with your S3 bucket name
  PYTHON_VERSION: "3.8"  # Parameterize your Python version
  GITHUB_RUN_ID: ${{ github.run_id }}
  TABLE_NAME: auto-test

permissions:
  id-token: write
  contents: read

jobs:
  validate-instance:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Configure AWS Credentials for Dev
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ env.DEV_ROLE_ARN }}
        aws-region: ${{ env.REGION }}

    # - name: insert github id request
    #   run: |
    #     echo "Inserting Github Event ID: $GITHUB_RUN_ID"
    #     python scripts/db-update.py $GITHUB_RUN_ID


    - name: s3 upload
      run: |
        python reports-s31.py

    # - name: insert failed status
    #   if: failure()
    #   run: |
    #     echo "Inserting Failed Status: $GITHUB_RUN_ID"
    #     python scripts/db-failed.py $GITHUB_RUN_ID


    - name: Create Defect
      if: failure()
      run: |
        # Extract failed step details
        failed_step=$(cat $GITHUB_WORKSPACE/reports/output.log | grep 'FAIL' | head -1 | awk '{print $2}')
        log_file_path="$GITHUB_WORKSPACE/reports/output.log"

        # Display the failed step and log file content (optional)
        echo "Failed Step: $failed_step"
        echo "Log File Path: $log_file_path"

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: my-artifact
        include-hidden-files: true
        if-no-files-found: warn
        path: |
         ./reports/report.html
         ./reports/report1.html
        


    # - name: Gather Instance Details
    #   run: |
    #     report_path=$(python ./instance-details.py ${{ env.INSTANCE_ID }})
    #     echo "INSTANCE_REPORT_PATH=$report_path" >> $GITHUB_ENV  # Store report path
    

    # - name: Upload Putty Validation Report to S3
    #   run: |
    #     python ./reports-upload.py "${{ env.PUTTY_REPORT_PATH }}" "${{ env.S3_BUCKET_NAME }}"

    # - name: Upload Instance Details Report to S3
    #   run: |
    #     python ./upload_to_s3.py "${{ env.INSTANCE_REPORT_PATH }}" "${{ env.S3_BUCKET_NAME }}"

    # - name: Failure Notification
    #   if: failure()
    #   run: |
    #     echo "Validation failed for instance: ${{ env.INSTANCE_ID }} in environment: dev"
